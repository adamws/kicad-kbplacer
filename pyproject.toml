[build-system]
requires = [
  "hatchling>=1.18",
  "hatch-kicad",
  "hatch-fancy-pypi-readme",
  "hatch-vcs",
]
build-backend = "hatchling.build"

[project]
name = "kbplacer"
authors = [
  { name = "adamws", email = "adamws@users.noreply.github.com" },
]
description = "KiCad plugin for automatic keyboard's key placement"
keywords = ["kicad"]
requires-python = ">=3.8"
license = {text = "GPL-3.0"}
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Manufacturing",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
  "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)"
]
dynamic = ["readme", "version"]

[project.urls]
"Homepage" = "https://github.com/adamws/kicad-kbplacer"
"Bug Tracker" = "https://github.com/adamws/kicad-kbplacer/issues"
"Sponsor" = "https://ko-fi.com/adamws"

[project.scripts]
kbplacer = "kbplacer.__main__:app"

[tool.hatch]
build.targets.sdist.include = [
  "kbplacer/*.py"
]
build.targets.sdist.exclude = [
  "kbplacer/kbplacer_plugin_action.py"
]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "kbplacer/_version.py"

[tool.hatch.build.targets.kicad-package]
name = "Keyboard footprints placer"
description = "Plugin for mechanical keyboard design"
description_full = [
  "Plugin for mechanical keyboard design.\n",
  "It features automatic key placement and routing based on various ",
  "layout descriptions like <a href='www.keyboard-layout-editor.com'>kle</a>, ",
  "<a href='www.github.com/ergogen/ergogen'>ergogen</a> and ",
  "<a href='www.caniusevia.com'>via</a>.\n",
  "To learn more visit project's homepage.",
]
identifier = "com.github.adamws.kicad-kbplacer"
author = { name = "adamws", web="https://adamws.github.io" }
tags = ["keyboard"]
status = "{env:KBPLACER_KICAD_STATUS:development}"
kicad_version = "6.0"
sources = ["kbplacer", "dist"] # rewrite paths
include = [
  "kbplacer/*.py",
  "kbplacer/icon.png",
]
artifacts = ["dist/locale"] # generated by `release/hatch_translate.py` hook
icon = "resources/icon.png"
download_url = "{env:KBPLACER_KICAD_RELEASE_URL:https://adamws.github.io/kicad-kbplacer/{zip_name}}"

[tool.hatch.build.targets.kicad-package.hooks.custom]
path = "release/hatch_translate.py"

[tool.hatch.build.targets.kicad-package.hooks.kicad-repository]
enable-by-default = false

[tool.hatch.metadata.hooks.fancy-pypi-readme]
content-type = "text/markdown"
fragments = [
  { text = "KiCad plugin for mechanical keyboard design.\n" },
  { text = "https://github.com/adamws/kicad-kbplacer" },
]

[tool.hatch.envs.lint]
detached = true
dependencies = [
  "black>=24.4.2",
  "mypy>=1.0.0",
  "ruff>=0.5.3",
]
[tool.hatch.envs.lint.scripts]
typing = "mypy --install-types --non-interactive {args:kbplacer tests}"
style = [
  "ruff check --output-format=concise {args:.}",
  "black --check --diff {args:.}",
]
fmt = [
  "black {args:.}",
  "ruff check --fix --output-format=concise {args:.}",
  "style",
]
all = [
  "style",
  "typing",
]

[tool.black]
target-version = ["py37"]
line-length = 88

[tool.ruff]
lint.select = ["ANN", "E", "F", "I", "N", "PL", "W"]
lint.ignore = [
  # Ignore missing type annotations for `self` in method and `cls` in classmethod
  "ANN101", "ANN102",
]

[tool.ruff.lint.per-file-ignores]
"kbplacer/kbplacer_plugin_action.py" = ["N802"]
"kbplacer/kbplacer_dialog.py" = ["N802"]
"kbplacer/help_dialog.py" = ["N802"]
"tests/**/*" = ["ANN"]

[tool.ruff.lint.isort]
known-first-party = ["hatch_kicad"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.coverage.run]
relative_files = true
omit = [
  "kbplacer/_version.py",
]

[tool.hatch.envs.tools]
dependencies = [
  "colormath==3.0.0",
  "drawsvg==2.4.0",
  "kicad-skip==0.2.5",
  "pyurlon==0.1.0",
  "PyYAML==6.0.1",
  "shapely==2.0.6",
  "solidpython==1.1.3",
  "pytest>=6.0.0",
]
[tool.hatch.envs.tools.scripts]
layout2image = "python tools/layout2image.py {args}"
layout2schematic = "python tools/layout2schematic.py {args}"
layout2url = "python tools/layout2url.py {args}"
layout2openscad = "python tools/layout2openscad.py {args}"
kle2kle = "python tools/kle2kle.py {args}"
test = "python tools/run_tests.py {args}"
